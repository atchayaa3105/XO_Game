{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT Tutorial\\\\tic-tac-toe\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from './board.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        Squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner is :' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          Squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["E:/REACT Tutorial/tic-tac-toe/src/App.js"],"names":["React","Board","Game","Component","constructor","props","state","history","Squares","Array","fill","xIsNext","render","current","length","winner","calculateWinner","squares","status","i","handleClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,CAAC;AACPC,QAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADC;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAX;AAMA;;AAEFC,EAAAA,MAAM,GAAG;AACP,UAAML,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMM,OAAO,GAAGN,OAAO,CAACA,OAAO,CAACO,MAAR,GAAe,CAAhB,CAAvB;AACA,UAAMC,MAAM,GAAGC,eAAe,CAACH,OAAO,CAACI,OAAT,CAA9B;AACA,QAAIC,MAAJ;;AACA,QAAGH,MAAH,EAAU;AACRG,MAAAA,MAAM,GAAC,gBAAcH,MAArB;AACD,KAFD,MAEM;AACLG,MAAAA,MAAM,GAAG,mBAAkB,KAAKZ,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA0B,GAA5C,CAAT;AACA;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AACA,UAAA,OAAO,EAAEE,OAAO,CAACI,OADjB;AAEA,UAAA,OAAO,EAAGE,CAAD,IAAM,KAAKC,WAAL,CAAiBD,CAAjB;AAFf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApCgC;;AAuCnC,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport Board from './board.js';\nimport './App.css';\n\nclass Game extends React.Component {\n   constructor(props){\n    super(props);\n    this.state={\n      history:[{\n        Squares:Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n   }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if(winner){\n      status='Winner is :'+winner;\n    } else{\n     status = 'Next player: '+ (this.state.xIsNext ? 'X': 'O');\n    } \n    \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          Squares={current.squares}\n          onClick={(i)=> this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n\n"]},"metadata":{},"sourceType":"module"}