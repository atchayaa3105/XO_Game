{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT Tutorial\\\\tic-tac-toe\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from './board.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        Squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.Squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        Squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner is :' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          Squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["E:/REACT Tutorial/tic-tac-toe/src/App.js"],"names":["React","Board","Game","Component","constructor","props","state","history","Squares","Array","fill","xIsNext","handleClick","i","current","length","squares","slice","calculateWinner","setState","concat","render","winner","moves","map","step","move","desc","jumpTo","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,CAAC;AACPC,QAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADC;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAX;AAMA;;AAIFC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACZ,UAAMN,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAe,CAAhB,CAAvB;AACA,UAAMC,OAAO,GAAEF,OAAO,CAACN,OAAR,CAAgBS,KAAhB,EAAf;;AACF,QAAGC,eAAe,CAACF,OAAD,CAAf,IAA4BA,OAAO,CAACH,CAAD,CAAtC,EAA0C;AACxC;AACD;;AACDG,IAAAA,OAAO,CAACH,CAAD,CAAP,GAAY,KAAKP,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA0B,GAAtC;AACA,SAAKQ,QAAL,CAAc;AACZZ,MAAAA,OAAO,EAACA,OAAO,CAACa,MAAR,CAAe,CAAC;AACpBZ,QAAAA,OAAO,EAAEQ;AADW,OAAD,CAAf,CADI;AAIZL,MAAAA,OAAO,EAAC,CAAC,KAAKL,KAAL,CAAWK;AAJR,KAAd;AAMD;;AAKDU,EAAAA,MAAM,GAAG;AACL,UAAMd,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAe,CAAhB,CAAvB;AACA,UAAMO,MAAM,GAAGJ,eAAe,CAACJ,OAAO,CAACE,OAAT,CAA9B;AAEA,UAAMO,KAAK,GAAGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,YAAMC,IAAI,GAAGD,IAAI,GAAG,iBAAiBA,IAApB,GAA2B,kBAA5C;AACE,0BACE;AAAA,+BACA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKE,MAAL,CAAYF,IAAZ,CAAvB;AAAA,oBAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF;AAKA,KAPY,CAAd;AASA,QAAIE,MAAJ;;AACA,QAAGP,MAAH,EAAU;AACRO,MAAAA,MAAM,GAAC,gBAAcP,MAArB;AACD,KAFD,MAEM;AACLO,MAAAA,MAAM,GAAG,mBAAkB,KAAKvB,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA0B,GAA5C,CAAT;AACA;;AAEH,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AACA,UAAA,OAAO,EAAEG,OAAO,CAACE,OADjB;AAEA,UAAA,OAAO,EAAGH,CAAD,IAAM,KAAKD,WAAL,CAAiBC,CAAjB;AAFf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAOgB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcC;;AApEgC;;AAwEnC,eAAerB,IAAf","sourcesContent":["import React from 'react';\nimport Board from './board.js';\nimport './App.css';\n\nclass Game extends React.Component {\n  \n   constructor(props){\n    super(props);\n    this.state={\n      history:[{\n        Squares:Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n   }\n\n\n\n  handleClick(i){\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const squares= current.Squares.slice();\n  if(calculateWinner(squares) || squares[i]){\n    return;\n  }\n  squares[i]= this.state.xIsNext ? 'X': 'O';\n  this.setState({\n    history:history.concat([{      \n        Squares: squares,\n      }]),\n    xIsNext:!this.state.xIsNext,\n  });\n}\n\n\n\n\nrender() {\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const winner = calculateWinner(current.squares);\n    \n    const moves = history.map((step, move) => {    \n    const desc = move ? 'Go to move #' + move : 'Go to game start';     \n      return (       \n        <li>          \n        <button onClick={() => this.jumpTo(move)}>{desc}</button>   \n        </li>  \n       );  \n     });\n\n    let status;\n    if(winner){\n      status='Winner is :'+winner;\n    } else{\n     status = 'Next player: '+ (this.state.xIsNext ? 'X': 'O');\n    } \n\n  return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          Squares={current.squares}\n          onClick={(i)=> this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Game;\n\n"]},"metadata":{},"sourceType":"module"}