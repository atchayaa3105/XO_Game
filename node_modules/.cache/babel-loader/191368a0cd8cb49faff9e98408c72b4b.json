{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT Tutorial\\\\tic-tac-toe\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from './board.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //history:[{\n      Squares: Array(9).fill(null),\n      //}],\n      xIsNext: true\n    };\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [1, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  handleClick(i) {\n    //const history = this.state.history;\n    //const current = history[history.length-1];\n    const squares =\n    /*current.*/\n    Squares.slice();\n\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      //history:history.concat([{      \n      Squares: squares,\n      //}]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    //const history = this.state.history;\n    //const current = history[history.length-1];\n    const winner = this.calculateWinner(\n    /*current.*/\n    squares);\n    /*const moves = history.map((step, move) => {    \n    const desc = move ? 'Go to move #' + move : 'Go to game start';     \n      return (       \n        <li>          \n        <button onClick={() => this.jumpTo(move)}>{desc}</button>   \n        </li>  \n       );  \n     });*/\n\n    let status;\n\n    if (winner) {\n      status = 'Winner is :' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          Squares:\n          /*current.*/\n          squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["E:/REACT Tutorial/tic-tac-toe/src/App.js"],"names":["React","Board","Game","Component","constructor","props","state","Squares","Array","fill","xIsNext","calculateWinner","squares","lines","i","length","a","b","c","handleClick","slice","setState","render","winner","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board.js';\nimport './App.css';\n\nclass Game extends React.Component {\n  \n   constructor(props){\n    super(props);\n    this.state={\n      //history:[{\n        Squares:Array(9).fill(null),\n      //}],\n      xIsNext: true,\n    };\n   }\n\n\n\ncalculateWinner(squares) {\n  const lines=[\n  [0,1,2],\n  [3,4,5],\n  [6,7,8],\n  [0,3,6],\n  [1,4,7],\n  [2,5,8],\n  [1,4,8],\n  [2,4,6],\n  ];\n\n  for(let i=0; i<lines.length; i++){\n    const [a,b,c]=lines[i];\n    if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n\n  handleClick(i){\n    //const history = this.state.history;\n    //const current = history[history.length-1];\n    const squares= /*current.*/Squares.slice();\n  if(this.calculateWinner(squares) || squares[i]){\n    return;\n  }\n  squares[i]= this.state.xIsNext ? 'X': 'O';\n  this.setState({\n    //history:history.concat([{      \n    Squares: squares,\n    //}]),\n    xIsNext:!this.state.xIsNext,\n  });\n}\n\n\n\n\nrender() {\n    //const history = this.state.history;\n    //const current = history[history.length-1];\n    const winner = this.calculateWinner(/*current.*/squares);\n    \n    /*const moves = history.map((step, move) => {    \n    const desc = move ? 'Go to move #' + move : 'Go to game start';     \n      return (       \n        <li>          \n        <button onClick={() => this.jumpTo(move)}>{desc}</button>   \n        </li>  \n       );  \n     });*/\n\n    let status;\n    if(winner){\n      status='Winner is :'+winner;\n    } else{\n     status = 'Next player: '+ (this.state.xIsNext ? 'X': 'O');\n    } \n\n  return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          Squares={/*current.*/squares}\n          onClick={(i)=> this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{/*moves*/}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Game;\n\n"]},"metadata":{},"sourceType":"module"}